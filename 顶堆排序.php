<?php
/**
 *
 * 一、堆的定义
    堆通常是一个可以被看做一棵树的数组对象，其任一非叶节点满足以下性质：
    1）堆中某个节点的值总是不大于或不小于其父节点的值：
    　　每个节点的值都大于或等于其左右子节点的值，称为大顶堆。即：arr[i] >= arr[2i + 1] && arr[i] >= arr[2i+2]。
 *     即堆顶元素为最大值
    　　或：
    　　每个节点的值都小于或等于其左右子节点的值，称为小顶堆。即：arr[i] <= arr[2i + 1] && arr[i] <= arr[2i+2]。
 *     即堆顶元素为最小值
    2）堆总是一棵完全二叉树。
 *
 * 注：上述公式，根节点从0开始。如果根节点从1开始，则左右子节点分别是2i和2i+1。
 *
 * 由上述性质可知：堆顶元素（或完全二叉树的根）必定是所有元素中最大值（大顶堆）或最小值（小顶堆）。
 *
 * 二、基本思想
    以大顶堆为例，将待排序的序列构造成一个大根堆，此时，整个序列的最大值就是堆顶的根节点。
 *  将它移走（也就是将其与堆数组的末尾元素交换，此时末尾元素就是最大值），然后将剩余的n-1个序列重新构造成一个堆，这样就会得到n个元素中的次小的值。
 *  如此反复执行，便能得到一个有序序列了。
 *
 * 三、算法过程
    1）将无序序列构建成一个堆，根据升序降序需求选择大顶堆或小顶堆;
    2）将堆顶元素与末尾元素交换，将最大元素"沉"到数组末端;
    3）重新调整结构，使其满足堆定义，然后继续交换堆顶元素与当前末尾元素，反复执行调整+交换步骤，直到整个序列有序。
    以大顶堆为例
 *
 * 创建堆：
    1）将n个元素从0到n-1（或从1到n）自顶向下、从左到右编码，转换成一棵完全二叉树；
    2）从n/2的非叶节点开始到根节点，逐个扫描，如果子节点大于父节点，就交换；
    3）直到根节点最大，如果子树不满足最大堆的条件，继续调节，直到所有的父节点都大于子节点为止。
 *
 * 堆排序：
    1）排序开始，首先输出堆顶元素，因为它是最大值；
    2）将堆顶元素和最后一个元素交换；
    3）将前面n-1个节点继续进行堆调整的过程，再将根节点取出，交换堆顶和最后一个元素；
    4）这样一直到所有节点都取出，则排序完成。
     */